aliases:
- &environment
  working_directory: ~/code
  docker:
  - image: circleci/android:api-28-alpha
  environment:
    JVM_OPTS: -Xmx3200m

- &tests
  - "Lint-Findbugs"
  - "Checkstyle"
  - "PMD"

version: 2
workflows:
  version: 2
  build_test_deploy:
    jobs:
    - "Dependencies"
    - "Lint-Findbugs":
        requires:
        - "Dependencies"
    - "Checkstyle":
        requires:
        - "Dependencies"
    - "PMD":
        requires:
        - "Dependencies"
    - "Build-Deploy":
        requires: *tests
jobs:
  "Dependencies":
    <<: *environment
    steps:
    - checkout
    - restore_cache:
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - run:
        command: sudo chmod +x ./gradlew
    - run:
        command: ./gradlew androidDependencies
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - persist_to_workspace:
        root: ~/code
        paths:
        - ./

  "Lint-Findbugs":
    <<: *environment
    steps:
    - attach_workspace:
        at: ~/code
    - run:
        command: ./gradlew lint test
    - run:
        command: ./gradlew findbugs
    - store_artifacts:
        path: app/build/reports
        destination: reports
    - store_test_results:
        path: app/build/test-results
        destination: test-results

  "Checkstyle":
    <<: *environment
    steps:
    - attach_workspace:
        at: ~/code
    - run:
        command: ./gradlew checkstyle
    - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
        path: app/build/reports
        destination: reports
  "PMD":
    <<: *environment
    steps:
    - attach_workspace:
        at: ~/code
    - run:
        command: ./gradlew pmd
    - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
        path: app/build/reports
        destination: reports
  "Build-Deploy":
    <<: *environment
    steps:
    - attach_workspace:
        at: ~/code
    - run:
        command: ./gradlew assembleRelease
    - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
        path: app/build/outputs/apk/release
        destination: release
    - run:
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            bash ./scripts/deploy-fabric.sh
          fi
          if [ "${CIRCLE_BRANCH}" == "develop" ]; then
            bash ./scripts/deploy-appcenter.sh
          fi